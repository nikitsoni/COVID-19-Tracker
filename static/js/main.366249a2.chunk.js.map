{"version":3,"sources":["Component/BarChart.js","Component/StateWise.js","Component/DailyCase.js","Component/Chart.js","Component/Footer.js","App.js","index.js"],"names":["BarChart","props","stateData","className","data","labels","datasets","label","backgroundColor","confirmed","active","recovered","deaths","options","legend","display","title","text","state","StateWise","states","useState","lastupdatedtime","setstateData","for","onChange","event","value","target","x","length","id","map","i","key","DailyCase","dailycase","dailyconfirmed","dailydeceased","dailyrecovered","date","totalconfirmed","totaldeceased","totalrecovered","dailyData","setDailyData","Chart","lineChart","borderColor","fill","Footer","href","App","setStates","setDailycase","useEffect","getData","a","fetch","response","json","statewise","cases_time_series","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.366249a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = (props) => {\r\n    \r\n    const {stateData} = props;\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected','Active','Recovered', 'Deaths'],\r\n                datasets: [\r\n                {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(251, 197, 49,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [stateData.confirmed, stateData.active, stateData.recovered, stateData.deaths],\r\n                },\r\n                ],\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${stateData.state}` },\r\n            }}\r\n            />\r\n        </div>)\r\n    \r\n};\r\n\r\nexport default BarChart;","import React, { useState} from 'react';\r\nimport BarChart from \"./BarChart\"\r\n\r\n\r\nfunction StateWise(props) {\r\n    \r\n    const {states} = props;\r\n\r\n    const [stateData, setstateData] = useState({\r\n        active: \"\",\r\n        confirmed: \"\",\r\n        deaths: \"\",\r\n        recovered: \"\",\r\n        state: \"\",\r\n        lastupdatedtime: \"\"\r\n    })\r\n\r\n\r\n    //console.log(stateData)\r\n\r\n\r\n\r\n    const handelChange = (event) => {\r\n        const value = event.target.value;\r\n        //setName({name: value})\r\n        //console.log(value)\r\n        //console.log(\"Yo\", states[1].state)\r\n        for (let x = 0; x < states.length; x++) {\r\n            if(states[x].state === value ){\r\n                setstateData({...stateData,\r\n                    active :states[x].active,\r\n                    confirmed: states[x].confirmed,\r\n                    recovered: states[x].recovered,\r\n                    state: states[x].state,\r\n                    deaths: states[x].deaths,\r\n                    lastupdatedtime: states[x].lastupdatedtime })\r\n            }\r\n            else if(value === \"total\"){\r\n                setstateData({...stateData,\r\n                    active :states[0].active,\r\n                    confirmed: states[0].confirmed,\r\n                    recovered: states[0].recovered,\r\n                    state: states[0].state,\r\n                    deaths: states[0].deaths,\r\n                    lastupdatedtime: states[0].lastupdatedtime })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n    const displayData = () => {\r\n        return(\r\n            <div className=\"rowi\">\r\n                <div className=\" text-center data\">\r\n                <h2>State</h2>\r\n                <p>{stateData.state}</p>\r\n                </div>\r\n                <div className=\" text-center data\">\r\n                <h2>Active</h2>\r\n                <p>{stateData.active}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Confirmed</h2>\r\n                <p>{stateData.confirmed}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Deaths</h2>\r\n                <p>{stateData.deaths}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Recovered</h2>\r\n                <p>{stateData.recovered}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Last Updated</h2>\r\n                <p>{stateData.lastupdatedtime}</p></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"input-group \">\r\n                <h2 className=\"mb-3 myhead\">Search Stats By State Name</h2>\r\n                    <div className=\"input-group-prepend mb-3\">\r\n                        <label className=\"input-group-text\" for=\"inputGroupSelect01\">States</label>\r\n                    </div>\r\n                    <select onChange={handelChange} className=\"custom-select mb-3\" id=\"inputGroupSelect01\">\r\n                        {states.map((state, i) => {\r\n                        return(\r\n                            <option key={i} value={state.state}>{state.state} </option>\r\n                        )\r\n                    })}\r\n                    </select>\r\n                </div>\r\n                { stateData.active && (<div>\r\n                    <div className=\"container\">{displayData()}</div>\r\n                    <BarChart stateData= {stateData}/>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default StateWise;","import React, {useState} from 'react';\r\n\r\nfunction DailyCase(props) {\r\n\r\n    const {dailycase} = props;\r\n\r\n    const [dailyData, setDailyData] = useState({\r\n        dailyconfirmed: \"\",\r\n        dailydeceased: \"\",\r\n        dailyrecovered: \"\",\r\n        date: \"\",\r\n        totalconfirmed: \"\",\r\n        totaldeceased: \"\",\r\n        totalrecovered: \"\"\r\n    })\r\n\r\n    const handelChange = (event) => {\r\n        const value = event.target.value;\r\n        //console.log(value)\r\n        //console.log(\"Yo\", states[1].state)\r\n        for (let x = 0; x < dailycase.length; x++) {\r\n            if(dailycase[x].date === value ){\r\n                setDailyData({...dailyData,\r\n                    dailydeceased :dailycase[x].dailydeceased,\r\n                    dailyrecovered: dailycase[x].dailyrecovered,\r\n                    date: dailycase[x].date,\r\n                    totalconfirmed: dailycase[x].totalconfirmed,\r\n                    totaldeceased: dailycase[x].totaldeceased,\r\n                    totalrecovered: dailycase[x].totalrecovered,\r\n                    dailyconfirmed: dailycase[x].dailyconfirmed })\r\n            }\r\n        }\r\n    }\r\n\r\n    const displayData = () => {\r\n        return(\r\n            <div className=\"rowi\">\r\n                <div className=\" text-center data\">\r\n                <h2>Confirmed</h2>\r\n                <p>{dailyData.dailyconfirmed}</p>\r\n                </div>\r\n                <div className=\" text-center data\">\r\n                <h2>Deceased</h2>\r\n                <p>{dailyData.dailydeceased}</p>\r\n                </div>\r\n                <div className=\" text-center data\">\r\n                <h2>Recovered</h2>\r\n                <p>{dailyData.dailyrecovered}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Date</h2>\r\n                <p>{dailyData.date}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Total Confirmed</h2>\r\n                <p>{dailyData.totalconfirmed}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Total Deceased</h2>\r\n                <p>{dailyData.totaldeceased}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Total Recovered</h2>\r\n                <p>{dailyData.totalrecovered}</p></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"input-group\">\r\n                <h2 className=\"mb-3 myhead\">Search Stats By Date</h2>\r\n                <div className=\"input-group-prepend mb-3\">\r\n                    <label className=\"input-group-text\" for=\"inputGroupSelect01\">Date</label>\r\n                </div>\r\n                <select onChange={handelChange} className=\"custom-select mb-3\" id=\"inputGroupSelect01\">\r\n                    {dailycase.map((data, i) => {\r\n                    return(\r\n                        <option key={i} value={data.date}>{data.date} </option>\r\n                    )\r\n                })}\r\n                </select>\r\n            </div>\r\n            {\r\n                dailyData.dailyconfirmed && (\r\n                    <div className=\"container\">{displayData()}</div>\r\n    \r\n                )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyCase;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst Chart = (props) => {\r\n\r\n    const {dailycase} = props;\r\n\r\n    //console.log(dailycase)\r\n\r\n  //const [dailyData, setDailyData] = useState({});\r\n\r\n\r\n  const lineChart = (\r\n      <Line\r\n        data={{\r\n          labels: dailycase.map(({date}) => date),\r\n          datasets: [{\r\n            data: dailycase.map((data) => data.totalconfirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailycase.map((data) => data.totaldeceased),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailycase.map((data) => data.totalrecovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(255, 255, 0, 0.5)',\r\n            fill: true,\r\n          }\r\n          ],\r\n        }}\r\n      />\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport '../style.css'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"container-fluid footer\">\r\n            <p className=\"mytext\">Developed by <a href=\"https://github.com/nikitsoni\">Nikit Soni</a></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport StateWise from \"./Component/StateWise\";\nimport DailyCase from \"./Component/DailyCase\";\nimport Chart from './Component/Chart'\nimport \"./style.css\";\nimport Footer from './Component/Footer'\n\n\nfunction App({state}) {\n\n  const [states, setStates] = useState([])\n  const [dailycase, setDailycase] = useState([])\n\n  //console.log(dailycase)\n\n  useEffect(() => {\n    getData();\n  }, [])\n\n  const getData = async () => {\n    const response = await fetch(\"https://api.covid19india.org/data.json\");\n    const data = await response.json();\n    //console.log(data)\n    setStates(data.statewise)    \n    setDailycase(data.cases_time_series)    \n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"head text-center\">India COVID-19 Tracker</h1>\n      <StateWise states={states} />\n      <DailyCase dailycase={dailycase} />\n      <Chart dailycase={dailycase} states={states}/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n\n//git init\n//git status\n//git add .\n//git commit -m \"\"\n//git push -u origin master\n//npm run deploy ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"../src/style.css\";\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}