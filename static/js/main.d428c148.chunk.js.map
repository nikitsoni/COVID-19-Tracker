{"version":3,"sources":["Component/BarChart.js","Component/DistrictBar.js","Component/DistrictWise.js","Component/StateWise.js","Component/DailyCase.js","Component/Chart.js","Component/Footer.js","App.js","index.js"],"names":["BarChart","props","stateData","className","data","labels","datasets","label","backgroundColor","confirmed","active","recovered","deaths","options","legend","display","title","text","state","DistrictBar","districts","deceased","district","DistrictWise","console","log","useState","allDistrictData","setAllDistrictData","districtDataOfState","setDistrictDataOfState","setDistricts","getDistrictWiseData","a","fetch","response","json","useEffect","getDistrictOfThatState","x","length","districtData","handelChange","event","value","target","success","onClick","for","onChange","id","map","i","key","StateWise","states","lastupdatedtime","setstateData","DailyCase","dailycase","dailyconfirmed","dailydeceased","dailyrecovered","date","totalconfirmed","totaldeceased","totalrecovered","dailyData","setDailyData","Chart","lineChart","borderColor","fill","Footer","href","App","setStates","setDailycase","getData","statewise","cases_time_series","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d428c148.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = (props) => {\r\n    \r\n    const {stateData} = props;\r\n    \r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected','Active','Recovered', 'Deaths'],\r\n                datasets: [\r\n                {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(251, 197, 49,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [stateData.confirmed, stateData.active, stateData.recovered, stateData.deaths],\r\n                },\r\n                ],\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${stateData.state}` },\r\n            }}\r\n            />\r\n        </div>)\r\n    \r\n};\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst DistrictBar = (props) => {\r\n    \r\n    const {districts} = props;\r\n    \r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected','Active','Recovered', 'Deaths'],\r\n                datasets: [\r\n                {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(251, 197, 49,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [districts.confirmed, districts.active, districts.recovered, districts.deceased],\r\n                },\r\n                ],\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${districts.district}` },\r\n            }}\r\n            />\r\n        </div>)\r\n    \r\n};\r\n\r\nexport default DistrictBar;","import React, {useState, useEffect} from 'react';\r\nimport DistrictBar from './DistrictBar';\r\nimport '../style.css'\r\n\r\n\r\nfunction DistrictWise(props) {\r\n\r\n    const {stateData} = props;\r\n    console.log(stateData.state)\r\n\r\n    const [allDistrictData, setAllDistrictData] = useState([])\r\n    const [districtDataOfState, setDistrictDataOfState] = useState([])\r\n    const [districts, setDistricts] = useState({\r\n        active: \"\",\r\n        confirmed: \"\",\r\n        deceased: \"\",\r\n        recovered: \"\",    \r\n        district: \"\",\r\n    })  \r\n\r\n    const getDistrictWiseData = async () => {\r\n        const response = await fetch(\"https://api.covid19india.org/v2/state_district_wise.json\");\r\n        const data = await response.json();\r\n        console.log(data)\r\n        setAllDistrictData(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDistrictWiseData()\r\n    }, [stateData])\r\n\r\n    const getDistrictOfThatState = () => {\r\n        for (let x = 0; x < allDistrictData.length; x++) {\r\n            if(stateData.state === allDistrictData[x].state){\r\n                setDistrictDataOfState(allDistrictData[x].districtData)\r\n                console.log(allDistrictData[x].state)\r\n            }\r\n            \r\n        }\r\n        console.log(districtDataOfState)\r\n    }\r\n\r\n\r\n    const handelChange = (event) => {\r\n        const value = event.target.value;\r\n        console.log(value)\r\n        //setName({name: value})\r\n        //console.log(value)\r\n        //console.log(\"Yo\", states[1].state)\r\n        console.log(districtDataOfState[0].active)\r\n        for (let x = 0; x < districtDataOfState.length; x++) {\r\n            if(districtDataOfState[x].district === value ){\r\n                console.log(districtDataOfState[x].district)\r\n                setDistricts({...districts,\r\n                    active : districtDataOfState[x].active,\r\n                    confirmed: districtDataOfState[x].confirmed,\r\n                    recovered: districtDataOfState[x].recovered,\r\n                    district: districtDataOfState[x].district,\r\n                    deceased: districtDataOfState[x].deceased,\r\n                    success : true\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    const displayData = () => {\r\n        return(\r\n            <div className=\"rowi\">\r\n                <div className=\" text-center data\">\r\n                <h2>District</h2>\r\n                <p>{districts.district}</p>\r\n                </div>\r\n                <div className=\" text-center data\">\r\n                <h2>Active</h2>\r\n                <p>{districts.active}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Confirmed</h2>\r\n                <p>{districts.confirmed}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Deaths</h2>\r\n                <p>{districts.deceased}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Recovered</h2>\r\n                <p>{districts.recovered}</p></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const display = () => {\r\n        return(\r\n            <div className=\"container\">\r\n            <button className=\"btn\" onClick={getDistrictOfThatState}>Click To Add Districts of {stateData.state}</button>\r\n                <div className=\"input-group \">\r\n                <h2 className=\"mb-3 myhead\">Search Stats By State District Name</h2>\r\n                    <div className=\"input-group-prepend mb-3\">\r\n                        <label className=\"input-group-text\" for=\"inputGroupSelect01\">District</label>\r\n                    </div>\r\n                    <select onChange={handelChange} className=\"custom-select mb-3\" id=\"inputGroupSelect01\">\r\n                        {districtDataOfState.map((district, i) => {\r\n                        return(\r\n                            <option key={i} value={district.district}>{district.district} </option>\r\n                        )\r\n                    })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n \r\n\r\n    return (\r\n            <div className=\"container\"> \r\n                {display()}     \r\n                { districts.district && (\r\n                <div>\r\n                    <div className=\"container\">{displayData()}</div>\r\n                    <DistrictBar districts= {districts}/>\r\n                </div>)\r\n                }      \r\n            </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default DistrictWise;","import React, { useState} from 'react';\r\nimport BarChart from \"./BarChart\"\r\nimport DistrictWise from './DistrictWise';\r\n\r\nfunction StateWise(props) {\r\n    \r\n    const {states} = props;\r\n\r\n    const [stateData, setstateData] = useState({\r\n        active: \"\",\r\n        confirmed: \"\",\r\n        deaths: \"\",\r\n        recovered: \"\",\r\n        state: \"\",\r\n        lastupdatedtime: \"\"\r\n    })\r\n\r\n    \r\n\r\n\r\n    //console.log(stateData)\r\n\r\n    \r\n\r\n\r\n\r\n    const handelChange = (event) => {\r\n        const value = event.target.value;\r\n        //setName({name: value})\r\n        //console.log(value)\r\n        //console.log(\"Yo\", states[1].state)\r\n        for (let x = 0; x < states.length; x++) {\r\n            if(states[x].state === value ){\r\n                setstateData({...stateData,\r\n                    active :states[x].active,\r\n                    confirmed: states[x].confirmed,\r\n                    recovered: states[x].recovered,\r\n                    state: states[x].state,\r\n                    deaths: states[x].deaths,\r\n                    lastupdatedtime: states[x].lastupdatedtime })\r\n            }\r\n            else if(value === \"total\"){\r\n                setstateData({...stateData,\r\n                    active :states[0].active,\r\n                    confirmed: states[0].confirmed,\r\n                    recovered: states[0].recovered,\r\n                    state: states[0].state,\r\n                    deaths: states[0].deaths,\r\n                    lastupdatedtime: states[0].lastupdatedtime })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n    const displayData = () => {\r\n        return(\r\n            <div className=\"rowi\">\r\n                <div className=\" text-center data\">\r\n                <h2>State</h2>\r\n                <p>{stateData.state}</p>\r\n                </div>\r\n                <div className=\" text-center data\">\r\n                <h2>Active</h2>\r\n                <p>{stateData.active}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Confirmed</h2>\r\n                <p>{stateData.confirmed}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Deaths</h2>\r\n                <p>{stateData.deaths}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Recovered</h2>\r\n                <p>{stateData.recovered}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Last Updated</h2>\r\n                <p>{stateData.lastupdatedtime}</p></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"input-group \">\r\n                <h2 className=\"mb-3 myhead\">Search Stats By State Name</h2>\r\n                    <div className=\"input-group-prepend mb-3\">\r\n                        <label className=\"input-group-text\" for=\"inputGroupSelect01\">States</label>\r\n                    </div>\r\n                    <select onChange={handelChange} className=\"custom-select mb-3\" id=\"inputGroupSelect01\">\r\n                        {states.map((state, i) => {\r\n                        return(\r\n                            <option key={i} value={state.state}>{state.state} </option>\r\n                        )\r\n                    })}\r\n                    </select>\r\n                </div>\r\n                { stateData.active && (<div>\r\n                    <div className=\"container\">{displayData()}</div>\r\n                    <BarChart stateData= {stateData}/>\r\n                    <DistrictWise stateData= {stateData}/>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default StateWise;","import React, {useState} from 'react';\r\n\r\nfunction DailyCase(props) {\r\n\r\n    const {dailycase} = props;\r\n\r\n    const [dailyData, setDailyData] = useState({\r\n        dailyconfirmed: \"\",\r\n        dailydeceased: \"\",\r\n        dailyrecovered: \"\",\r\n        date: \"\",\r\n        totalconfirmed: \"\",\r\n        totaldeceased: \"\",\r\n        totalrecovered: \"\"\r\n    })\r\n\r\n    const handelChange = (event) => {\r\n        const value = event.target.value;\r\n        //console.log(value)\r\n        //console.log(\"Yo\", states[1].state)\r\n        for (let x = 0; x < dailycase.length; x++) {\r\n            if(dailycase[x].date === value ){\r\n                setDailyData({...dailyData,\r\n                    dailydeceased :dailycase[x].dailydeceased,\r\n                    dailyrecovered: dailycase[x].dailyrecovered,\r\n                    date: dailycase[x].date,\r\n                    totalconfirmed: dailycase[x].totalconfirmed,\r\n                    totaldeceased: dailycase[x].totaldeceased,\r\n                    totalrecovered: dailycase[x].totalrecovered,\r\n                    dailyconfirmed: dailycase[x].dailyconfirmed })\r\n            }\r\n        }\r\n    }\r\n\r\n    const displayData = () => {\r\n        return(\r\n            <div className=\"rowi\">\r\n                <div className=\" text-center data\">\r\n                <h2>Confirmed</h2>\r\n                <p>{dailyData.dailyconfirmed}</p>\r\n                </div>\r\n                <div className=\" text-center data\">\r\n                <h2>Deceased</h2>\r\n                <p>{dailyData.dailydeceased}</p>\r\n                </div>\r\n                <div className=\" text-center data\">\r\n                <h2>Recovered</h2>\r\n                <p>{dailyData.dailyrecovered}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Date</h2>\r\n                <p>{dailyData.date}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Total Confirmed</h2>\r\n                <p>{dailyData.totalconfirmed}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Total Deceased</h2>\r\n                <p>{dailyData.totaldeceased}</p></div>\r\n                <div className=\" text-center data\">\r\n                <h2>Total Recovered</h2>\r\n                <p>{dailyData.totalrecovered}</p></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"input-group\">\r\n                <h2 className=\"mb-3 myhead\">Search Stats By Date</h2>\r\n                <div className=\"input-group-prepend mb-3\">\r\n                    <label className=\"input-group-text\" for=\"inputGroupSelect01\">Date</label>\r\n                </div>\r\n                <select onChange={handelChange} className=\"custom-select mb-3\" id=\"inputGroupSelect01\">\r\n                    {dailycase.map((data, i) => {\r\n                    return(\r\n                        <option key={i} value={data.date}>{data.date} </option>\r\n                    )\r\n                })}\r\n                </select>\r\n            </div>\r\n            {\r\n                dailyData.dailyconfirmed && (\r\n                    <div className=\"container\">{displayData()}</div>\r\n    \r\n                )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyCase;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst Chart = (props) => {\r\n\r\n    const {dailycase} = props;\r\n\r\n    //console.log(dailycase)\r\n\r\n  //const [dailyData, setDailyData] = useState({});\r\n\r\n\r\n  const lineChart = (\r\n      <Line\r\n        data={{\r\n          labels: dailycase.map(({date}) => date),\r\n          datasets: [{\r\n            data: dailycase.map((data) => data.totalconfirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailycase.map((data) => data.totaldeceased),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailycase.map((data) => data.totalrecovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(255, 255, 0, 0.5)',\r\n            fill: true,\r\n          }\r\n          ],\r\n        }}\r\n      />\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport '../style.css'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"container-fluid footer\">\r\n            <p className=\"mytext\">Developed by <a href=\"https://github.com/nikitsoni\">Nikit Soni</a></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport StateWise from \"./Component/StateWise\";\nimport DailyCase from \"./Component/DailyCase\";\nimport Chart from './Component/Chart'\nimport \"./style.css\";\nimport Footer from './Component/Footer'\n\n\n\nfunction App({state}) {\n\n  const [states, setStates] = useState([])\n  const [dailycase, setDailycase] = useState([])\n\n  //console.log(dailycase)\n\n  useEffect(() => {\n    getData();\n  }, [])\n\n  const getData = async () => {\n    const response = await fetch(\"https://api.covid19india.org/data.json\");\n    const data = await response.json();\n    //console.log(data)\n    setStates(data.statewise)    \n    setDailycase(data.cases_time_series)    \n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"head text-center\">India COVID-19 Tracker</h1>\n      <StateWise states={states} />\n      <DailyCase dailycase={dailycase} />\n      <Chart dailycase={dailycase} states={states}/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n\n//git init\n//git status\n//git add .\n//git commit -m \"\"\n//git push -u origin master\n//npm run deploy ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"../src/style.css\";\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}